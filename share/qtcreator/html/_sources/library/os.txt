:mod:`os` -- basic "operating system" services
==============================================

.. module:: os
   :synopsis: basic "operating system" services

The ``os`` module contains functions for filesystem access and ``urandom``.

Pyboard specifics
-----------------

.. only:: port_pyboard or port_wipy

    The filesystem on the pyboard has ``/`` as the root directory and the
    available physical drives are accessible from here.  They are currently:

        ``/flash``      -- the internal flash filesystem

        ``/sd``         -- the SD card (if it exists)

.. only:: port_pyboard

    On boot up, the current directory is ``/flash`` if no SD card is inserted,
    otherwise it is ``/sd``.

.. only:: port_wipy

    On boot up, the current directory is ``/flash``.

.. only:: port_openmvcam

    The filesystem on the pyboard has ``/`` as the root directory and the
    available physical drives are accessible from here.  They are currently:

        ``/``      -- the SD card (if it exists) or the internal flash
                      filesystem (if the SD card doesn't exist).

Functions
---------

.. function:: chdir(path)

   Change current directory.

.. function:: getcwd()

   Get the current directory.

.. function:: listdir([dir])

   With no argument, list the current directory.  Otherwise list the given directory.

.. function:: mkdir(path)

   Create a new directory.

.. function:: remove(path)

   Remove a file.

.. function:: rmdir(path)

   Remove a directory.

.. function:: rename(old_path, new_path)

   Rename a file.

.. function:: stat(path)

   Get the status of a file or directory.

.. function:: sync()

   Sync all filesystems.

.. function:: urandom(n)

   Return a bytes object with n random bytes, generated by the hardware
   random number generator.

.. only:: port_wipy

    .. function:: mkfs(drive)

       Formats the specified drive, must be either ``/flash`` or ``/sd``.

Constants
---------

.. data:: sep

   separation character used in paths
